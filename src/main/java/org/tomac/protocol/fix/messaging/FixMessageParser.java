package org.tomac.protocol.fix.messaging;

// DO NOT EDIT!!!
// This file is generated by FixMessageGenerator.
// If you need additional functionality, put it in a helper class
// that does not live in this folder!!!  Any java file in this folder 
// will be deleted upon the next run of the FixMessageGenerator!

import java.nio.ByteBuffer;
import org.tomac.protocol.fix.FixValidationError;
import org.tomac.protocol.fix.FixInMessage;
import org.tomac.protocol.fix.FixUtils;

public class FixMessageParser implements FixMessageInfo
{

		public FixValidationError err = new FixValidationError();

	public FixInMessage parse( ByteBuffer buf, FixMessageListener l )
	{

		int msgType = FixInMessage.crackMsgType( buf ,err );

		// garbled message
		if (err.hasError()) return null; 

        switch( msgType )
        {

		case MessageTypes.ACCEPTEDCANCELREPLACE_INT:
			FixAcceptedCancelReplace fixAcceptedCancelReplace = FixUtils.fixMessagePool.getFixAcceptedCancelReplace(buf, err);
			l.onFixAcceptedCancelReplace(fixAcceptedCancelReplace);
			return (FixInMessage) fixAcceptedCancelReplace;
		case MessageTypes.ACCEPTEDCANCEL_INT:
			FixAcceptedCancel fixAcceptedCancel = FixUtils.fixMessagePool.getFixAcceptedCancel(buf, err);
			l.onFixAcceptedCancel(fixAcceptedCancel);
			return (FixInMessage) fixAcceptedCancel;
		case MessageTypes.APPLICATIONREJECT_INT:
			FixApplicationReject fixApplicationReject = FixUtils.fixMessagePool.getFixApplicationReject(buf, err);
			l.onFixApplicationReject(fixApplicationReject);
			return (FixInMessage) fixApplicationReject;
		case MessageTypes.BREAKNOTIFICATION_INT:
			FixBreakNotification fixBreakNotification = FixUtils.fixMessagePool.getFixBreakNotification(buf, err);
			l.onFixBreakNotification(fixBreakNotification);
			return (FixInMessage) fixBreakNotification;
		case MessageTypes.BUSINESSREJECT_INT:
			FixBusinessReject fixBusinessReject = FixUtils.fixMessagePool.getFixBusinessReject(buf, err);
			l.onFixBusinessReject(fixBusinessReject);
			return (FixInMessage) fixBusinessReject;
		case MessageTypes.CANCELNOTIFICATION_INT:
			FixCancelNotification fixCancelNotification = FixUtils.fixMessagePool.getFixCancelNotification(buf, err);
			l.onFixCancelNotification(fixCancelNotification);
			return (FixInMessage) fixCancelNotification;
		case MessageTypes.ENTRYNOTIFICATIONTOALLEGEDFIRM_INT:
			FixEntryNotificationtoAllegedFirm fixEntryNotificationtoAllegedFirm = FixUtils.fixMessagePool.getFixEntryNotificationtoAllegedFirm(buf, err);
			l.onFixEntryNotificationtoAllegedFirm(fixEntryNotificationtoAllegedFirm);
			return (FixInMessage) fixEntryNotificationtoAllegedFirm;
		case MessageTypes.EXECUTIONREPORTFILL_INT:
			FixExecutionReportFill fixExecutionReportFill = FixUtils.fixMessagePool.getFixExecutionReportFill(buf, err);
			l.onFixExecutionReportFill(fixExecutionReportFill);
			return (FixInMessage) fixExecutionReportFill;
		case MessageTypes.EXECUTIONRESTATEMENT_INT:
			FixExecutionRestatement fixExecutionRestatement = FixUtils.fixMessagePool.getFixExecutionRestatement(buf, err);
			l.onFixExecutionRestatement(fixExecutionRestatement);
			return (FixInMessage) fixExecutionRestatement;
		case MessageTypes.LOCKEDINNOTIFICATION_INT:
			FixLockedinNotification fixLockedinNotification = FixUtils.fixMessagePool.getFixLockedinNotification(buf, err);
			l.onFixLockedinNotification(fixLockedinNotification);
			return (FixInMessage) fixLockedinNotification;
		case MessageTypes.LOCKEDINTRADEBREAK_INT:
			FixLockedinTradeBreak fixLockedinTradeBreak = FixUtils.fixMessagePool.getFixLockedinTradeBreak(buf, err);
			l.onFixLockedinTradeBreak(fixLockedinTradeBreak);
			return (FixInMessage) fixLockedinTradeBreak;
		case MessageTypes.ORDERACKNOWLEDGEMENT_INT:
			FixOrderAcknowledgement fixOrderAcknowledgement = FixUtils.fixMessagePool.getFixOrderAcknowledgement(buf, err);
			l.onFixOrderAcknowledgement(fixOrderAcknowledgement);
			return (FixInMessage) fixOrderAcknowledgement;
		case MessageTypes.ORDERREJECT_INT:
			FixOrderReject fixOrderReject = FixUtils.fixMessagePool.getFixOrderReject(buf, err);
			l.onFixOrderReject(fixOrderReject);
			return (FixInMessage) fixOrderReject;
		case MessageTypes.PENDINGCANCEL_INT:
			FixPendingCancel fixPendingCancel = FixUtils.fixMessagePool.getFixPendingCancel(buf, err);
			l.onFixPendingCancel(fixPendingCancel);
			return (FixInMessage) fixPendingCancel;
		case MessageTypes.TRADEENTRYNOTIFICATIONTOENTERINGFIRM_INT:
			FixTradeEntryNotificationtoEnteringFirm fixTradeEntryNotificationtoEnteringFirm = FixUtils.fixMessagePool.getFixTradeEntryNotificationtoEnteringFirm(buf, err);
			l.onFixTradeEntryNotificationtoEnteringFirm(fixTradeEntryNotificationtoEnteringFirm);
			return (FixInMessage) fixTradeEntryNotificationtoEnteringFirm;
		case MessageTypes.TRADEREPORTCANCEL_INT:
			FixTradeReportCancel fixTradeReportCancel = FixUtils.fixMessagePool.getFixTradeReportCancel(buf, err);
			l.onFixTradeReportCancel(fixTradeReportCancel);
			return (FixInMessage) fixTradeReportCancel;
		case MessageTypes.TRADEREPORTENTRY_INT:
			FixTradeReportEntry fixTradeReportEntry = FixUtils.fixMessagePool.getFixTradeReportEntry(buf, err);
			l.onFixTradeReportEntry(fixTradeReportEntry);
			return (FixInMessage) fixTradeReportEntry;
		case MessageTypes.HEARTBEAT_INT:
			FixHeartbeat fixHeartbeat = FixUtils.fixMessagePool.getFixHeartbeat(buf, err);
			l.onFixHeartbeat(fixHeartbeat);
			return (FixInMessage) fixHeartbeat;
		case MessageTypes.LOGON_INT:
			FixLogon fixLogon = FixUtils.fixMessagePool.getFixLogon(buf, err);
			l.onFixLogon(fixLogon);
			return (FixInMessage) fixLogon;
		case MessageTypes.LOGOUT_INT:
			FixLogout fixLogout = FixUtils.fixMessagePool.getFixLogout(buf, err);
			l.onFixLogout(fixLogout);
			return (FixInMessage) fixLogout;
		case MessageTypes.ORDERSINGLE_INT:
			FixOrderSingle fixOrderSingle = FixUtils.fixMessagePool.getFixOrderSingle(buf, err);
			l.onFixOrderSingle(fixOrderSingle);
			return (FixInMessage) fixOrderSingle;
		case MessageTypes.ORDERCANCELREJECT_INT:
			FixOrderCancelReject fixOrderCancelReject = FixUtils.fixMessagePool.getFixOrderCancelReject(buf, err);
			l.onFixOrderCancelReject(fixOrderCancelReject);
			return (FixInMessage) fixOrderCancelReject;
		case MessageTypes.REJECTEDCANCELREPLACE_INT:
			FixRejectedCancelReplace fixRejectedCancelReplace = FixUtils.fixMessagePool.getFixRejectedCancelReplace(buf, err);
			l.onFixRejectedCancelReplace(fixRejectedCancelReplace);
			return (FixInMessage) fixRejectedCancelReplace;
		case MessageTypes.ORDERCANCELREPLACEREQUEST_INT:
			FixOrderCancelReplaceRequest fixOrderCancelReplaceRequest = FixUtils.fixMessagePool.getFixOrderCancelReplaceRequest(buf, err);
			l.onFixOrderCancelReplaceRequest(fixOrderCancelReplaceRequest);
			return (FixInMessage) fixOrderCancelReplaceRequest;
		case MessageTypes.ORDERCANCELREQUEST_INT:
			FixOrderCancelRequest fixOrderCancelRequest = FixUtils.fixMessagePool.getFixOrderCancelRequest(buf, err);
			l.onFixOrderCancelRequest(fixOrderCancelRequest);
			return (FixInMessage) fixOrderCancelRequest;
		case MessageTypes.REJECT_INT:
			FixReject fixReject = FixUtils.fixMessagePool.getFixReject(buf, err);
			l.onFixReject(fixReject);
			return (FixInMessage) fixReject;
		case MessageTypes.RESENDREQUEST_INT:
			FixResendRequest fixResendRequest = FixUtils.fixMessagePool.getFixResendRequest(buf, err);
			l.onFixResendRequest(fixResendRequest);
			return (FixInMessage) fixResendRequest;
		case MessageTypes.SEQUENCERESET_INT:
			FixSequenceReset fixSequenceReset = FixUtils.fixMessagePool.getFixSequenceReset(buf, err);
			l.onFixSequenceReset(fixSequenceReset);
			return (FixInMessage) fixSequenceReset;
		case MessageTypes.TESTREQUEST_INT:
			FixTestRequest fixTestRequest = FixUtils.fixMessagePool.getFixTestRequest(buf, err);
			l.onFixTestRequest(fixTestRequest);
			return (FixInMessage) fixTestRequest;
		default:
		l.onUnknownMessageType( buf, msgType );
		return null;

	}
	}
}
