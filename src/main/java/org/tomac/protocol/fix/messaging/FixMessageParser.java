package org.tomac.protocol.fix.messaging;

// DO NOT EDIT!!!
// This file is generated by FixMessageGenerator.
// If you need additional functionality, put it in a helper class
// that does not live in this folder!!!  Any java file in this folder 
// will be deleted upon the next run of the FixMessageGenerator!

import java.nio.ByteBuffer;
import org.tomac.protocol.fix.FixMessage;
import org.tomac.protocol.fix.FixValidationError;
import org.tomac.protocol.fix.FixInMessage;
import org.tomac.protocol.fix.FixUtils;

public class FixMessageParser implements FixMessageInfo
{

	public void parse( ByteBuffer buf, FixValidationError err, FixMessageListener l )
	{

		int msgType = FixInMessage.crackMsgType( buf ,err );
		FixMessagePool<FixMessage> fixMessagePool = new FixMessagePool<FixMessage>();

		// garbled message
		if (err.hasError()) return; 

        switch( msgType )
        {

		case MessageTypes.ACCEPTEDCANCELREPLACE_INT:
			FixAcceptedCancelReplace fixAcceptedCancelReplace = fixMessagePool.getFixAcceptedCancelReplace(buf, err);
			l.onFixAcceptedCancelReplace(fixAcceptedCancelReplace);
			fixMessagePool.returnFixAcceptedCancelReplace (fixAcceptedCancelReplace);
			break;
		case MessageTypes.ACCEPTEDCANCEL_INT:
			FixAcceptedCancel fixAcceptedCancel = fixMessagePool.getFixAcceptedCancel(buf, err);
			l.onFixAcceptedCancel(fixAcceptedCancel);
			fixMessagePool.returnFixAcceptedCancel (fixAcceptedCancel);
			break;
		case MessageTypes.APPLICATIONREJECT_INT:
			FixApplicationReject fixApplicationReject = fixMessagePool.getFixApplicationReject(buf, err);
			l.onFixApplicationReject(fixApplicationReject);
			fixMessagePool.returnFixApplicationReject (fixApplicationReject);
			break;
		case MessageTypes.BREAKNOTIFICATION_INT:
			FixBreakNotification fixBreakNotification = fixMessagePool.getFixBreakNotification(buf, err);
			l.onFixBreakNotification(fixBreakNotification);
			fixMessagePool.returnFixBreakNotification (fixBreakNotification);
			break;
		case MessageTypes.BUSINESSREJECT_INT:
			FixBusinessReject fixBusinessReject = fixMessagePool.getFixBusinessReject(buf, err);
			l.onFixBusinessReject(fixBusinessReject);
			fixMessagePool.returnFixBusinessReject (fixBusinessReject);
			break;
		case MessageTypes.CANCELNOTIFICATION_INT:
			FixCancelNotification fixCancelNotification = fixMessagePool.getFixCancelNotification(buf, err);
			l.onFixCancelNotification(fixCancelNotification);
			fixMessagePool.returnFixCancelNotification (fixCancelNotification);
			break;
		case MessageTypes.ENTRYNOTIFICATIONTOALLEGEDFIRM_INT:
			FixEntryNotificationtoAllegedFirm fixEntryNotificationtoAllegedFirm = fixMessagePool.getFixEntryNotificationtoAllegedFirm(buf, err);
			l.onFixEntryNotificationtoAllegedFirm(fixEntryNotificationtoAllegedFirm);
			fixMessagePool.returnFixEntryNotificationtoAllegedFirm (fixEntryNotificationtoAllegedFirm);
			break;
		case MessageTypes.EXECUTIONREPORTFILL_INT:
			FixExecutionReportFill fixExecutionReportFill = fixMessagePool.getFixExecutionReportFill(buf, err);
			l.onFixExecutionReportFill(fixExecutionReportFill);
			fixMessagePool.returnFixExecutionReportFill (fixExecutionReportFill);
			break;
		case MessageTypes.EXECUTIONRESTATEMENT_INT:
			FixExecutionRestatement fixExecutionRestatement = fixMessagePool.getFixExecutionRestatement(buf, err);
			l.onFixExecutionRestatement(fixExecutionRestatement);
			fixMessagePool.returnFixExecutionRestatement (fixExecutionRestatement);
			break;
		case MessageTypes.LOCKEDINNOTIFICATION_INT:
			FixLockedinNotification fixLockedinNotification = fixMessagePool.getFixLockedinNotification(buf, err);
			l.onFixLockedinNotification(fixLockedinNotification);
			fixMessagePool.returnFixLockedinNotification (fixLockedinNotification);
			break;
		case MessageTypes.LOCKEDINTRADEBREAK_INT:
			FixLockedinTradeBreak fixLockedinTradeBreak = fixMessagePool.getFixLockedinTradeBreak(buf, err);
			l.onFixLockedinTradeBreak(fixLockedinTradeBreak);
			fixMessagePool.returnFixLockedinTradeBreak (fixLockedinTradeBreak);
			break;
		case MessageTypes.ORDERACKNOWLEDGEMENT_INT:
			FixOrderAcknowledgement fixOrderAcknowledgement = fixMessagePool.getFixOrderAcknowledgement(buf, err);
			l.onFixOrderAcknowledgement(fixOrderAcknowledgement);
			fixMessagePool.returnFixOrderAcknowledgement (fixOrderAcknowledgement);
			break;
		case MessageTypes.ORDERREJECT_INT:
			FixOrderReject fixOrderReject = fixMessagePool.getFixOrderReject(buf, err);
			l.onFixOrderReject(fixOrderReject);
			fixMessagePool.returnFixOrderReject (fixOrderReject);
			break;
		case MessageTypes.PENDINGCANCEL_INT:
			FixPendingCancel fixPendingCancel = fixMessagePool.getFixPendingCancel(buf, err);
			l.onFixPendingCancel(fixPendingCancel);
			fixMessagePool.returnFixPendingCancel (fixPendingCancel);
			break;
		case MessageTypes.TRADEENTRYNOTIFICATIONTOENTERINGFIRM_INT:
			FixTradeEntryNotificationtoEnteringFirm fixTradeEntryNotificationtoEnteringFirm = fixMessagePool.getFixTradeEntryNotificationtoEnteringFirm(buf, err);
			l.onFixTradeEntryNotificationtoEnteringFirm(fixTradeEntryNotificationtoEnteringFirm);
			fixMessagePool.returnFixTradeEntryNotificationtoEnteringFirm (fixTradeEntryNotificationtoEnteringFirm);
			break;
		case MessageTypes.TRADEREPORTCANCEL_INT:
			FixTradeReportCancel fixTradeReportCancel = fixMessagePool.getFixTradeReportCancel(buf, err);
			l.onFixTradeReportCancel(fixTradeReportCancel);
			fixMessagePool.returnFixTradeReportCancel (fixTradeReportCancel);
			break;
		case MessageTypes.TRADEREPORTENTRY_INT:
			FixTradeReportEntry fixTradeReportEntry = fixMessagePool.getFixTradeReportEntry(buf, err);
			l.onFixTradeReportEntry(fixTradeReportEntry);
			fixMessagePool.returnFixTradeReportEntry (fixTradeReportEntry);
			break;
		case MessageTypes.HEARTBEAT_INT:
			FixHeartbeat fixHeartbeat = fixMessagePool.getFixHeartbeat(buf, err);
			l.onFixHeartbeat(fixHeartbeat);
			fixMessagePool.returnFixHeartbeat (fixHeartbeat);
			break;
		case MessageTypes.LOGON_INT:
			FixLogon fixLogon = fixMessagePool.getFixLogon(buf, err);
			l.onFixLogon(fixLogon);
			fixMessagePool.returnFixLogon (fixLogon);
			break;
		case MessageTypes.LOGOUT_INT:
			FixLogout fixLogout = fixMessagePool.getFixLogout(buf, err);
			l.onFixLogout(fixLogout);
			fixMessagePool.returnFixLogout (fixLogout);
			break;
		case MessageTypes.ORDERSINGLE_INT:
			FixOrderSingle fixOrderSingle = fixMessagePool.getFixOrderSingle(buf, err);
			l.onFixOrderSingle(fixOrderSingle);
			fixMessagePool.returnFixOrderSingle (fixOrderSingle);
			break;
		case MessageTypes.ORDERCANCELREJECT_INT:
			FixOrderCancelReject fixOrderCancelReject = fixMessagePool.getFixOrderCancelReject(buf, err);
			l.onFixOrderCancelReject(fixOrderCancelReject);
			fixMessagePool.returnFixOrderCancelReject (fixOrderCancelReject);
			break;
		case MessageTypes.REJECTEDCANCELREPLACE_INT:
			FixRejectedCancelReplace fixRejectedCancelReplace = fixMessagePool.getFixRejectedCancelReplace(buf, err);
			l.onFixRejectedCancelReplace(fixRejectedCancelReplace);
			fixMessagePool.returnFixRejectedCancelReplace (fixRejectedCancelReplace);
			break;
		case MessageTypes.ORDERCANCELREPLACEREQUEST_INT:
			FixOrderCancelReplaceRequest fixOrderCancelReplaceRequest = fixMessagePool.getFixOrderCancelReplaceRequest(buf, err);
			l.onFixOrderCancelReplaceRequest(fixOrderCancelReplaceRequest);
			fixMessagePool.returnFixOrderCancelReplaceRequest (fixOrderCancelReplaceRequest);
			break;
		case MessageTypes.ORDERCANCELREQUEST_INT:
			FixOrderCancelRequest fixOrderCancelRequest = fixMessagePool.getFixOrderCancelRequest(buf, err);
			l.onFixOrderCancelRequest(fixOrderCancelRequest);
			fixMessagePool.returnFixOrderCancelRequest (fixOrderCancelRequest);
			break;
		case MessageTypes.REJECT_INT:
			FixReject fixReject = fixMessagePool.getFixReject(buf, err);
			l.onFixReject(fixReject);
			fixMessagePool.returnFixReject (fixReject);
			break;
		case MessageTypes.RESENDREQUEST_INT:
			FixResendRequest fixResendRequest = fixMessagePool.getFixResendRequest(buf, err);
			l.onFixResendRequest(fixResendRequest);
			fixMessagePool.returnFixResendRequest (fixResendRequest);
			break;
		case MessageTypes.SEQUENCERESET_INT:
			FixSequenceReset fixSequenceReset = fixMessagePool.getFixSequenceReset(buf, err);
			l.onFixSequenceReset(fixSequenceReset);
			fixMessagePool.returnFixSequenceReset (fixSequenceReset);
			break;
		case MessageTypes.TESTREQUEST_INT:
			FixTestRequest fixTestRequest = fixMessagePool.getFixTestRequest(buf, err);
			l.onFixTestRequest(fixTestRequest);
			fixMessagePool.returnFixTestRequest (fixTestRequest);
			break;
		default:
		l.onUnknownMessageType( buf, msgType );
		break;

	}
	}
}
